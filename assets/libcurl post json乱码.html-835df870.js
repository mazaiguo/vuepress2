import{_ as n,o as s,c as a,e as t}from"./app-a242af93.js";const p={},o=t(`<h1 id="libcurl-post-json乱码" tabindex="-1"><a class="header-anchor" href="#libcurl-post-json乱码" aria-hidden="true">#</a> libcurl_Post_json乱码</h1><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>string <span class="token function">GBKToUTF8</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>string<span class="token operator">&amp;</span> strGBK<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	string strOutUTF8 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
	WCHAR <span class="token operator">*</span> str1<span class="token punctuation">;</span>
	<span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> strGBK<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	str1 <span class="token operator">=</span> <span class="token keyword">new</span> WCHAR<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> strGBK<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> str1<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
	n <span class="token operator">=</span> <span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> str1<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">char</span> <span class="token operator">*</span> str2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> str1<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> str2<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	strOutUTF8 <span class="token operator">=</span> str2<span class="token punctuation">;</span>
	<span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span>str1<span class="token punctuation">;</span>
	str1 <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
	<span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span>str2<span class="token punctuation">;</span>
	str2 <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> strOutUTF8<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> size_t <span class="token function">downloadCallback</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>buffer<span class="token punctuation">,</span> size_t sz<span class="token punctuation">,</span> size_t nmemb<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>writer<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	string<span class="token operator">*</span> psResponse <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token operator">*</span><span class="token punctuation">)</span> writer<span class="token punctuation">;</span>
	size_t size <span class="token operator">=</span> sz <span class="token operator">*</span> nmemb<span class="token punctuation">;</span>
	psResponse<span class="token operator">-&gt;</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span> buffer<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> sz <span class="token operator">*</span> nmemb<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


CURLcode <span class="token class-name">CMyConnectUrl</span><span class="token double-colon punctuation">::</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	CURLcode res<span class="token punctuation">;</span>
	string content<span class="token punctuation">;</span>
	m_curl <span class="token operator">=</span> <span class="token function">curl_easy_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token function">curl_easy_setopt</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">,</span> CURLOPT_SSL_VERIFYPEER<span class="token punctuation">,</span> FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置不验证ssl</span>
	<span class="token function">curl_easy_setopt</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">,</span> CURLOPT_CUSTOMREQUEST<span class="token punctuation">,</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//curl_easy_setopt(m_curl, CURLOPT_CUSTOMREQUEST, &quot;GET&quot;);</span>
	USES_CONVERSION<span class="token punctuation">;</span>
	string <span class="token function">strUrl</span><span class="token punctuation">(</span><span class="token function">W2A</span><span class="token punctuation">(</span>m_strUrl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">curl_easy_setopt</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">,</span> CURLOPT_URL<span class="token punctuation">,</span> strUrl<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">curl_easy_setopt</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">,</span> CURLOPT_FOLLOWLOCATION<span class="token punctuation">,</span> <span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">/*curl_easy_setopt(m_curl, CURLOPT_TIMEOUT, 2);*/</span>

	<span class="token function">curl_easy_setopt</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">,</span> CURLOPT_DEFAULT_PROTOCOL<span class="token punctuation">,</span> <span class="token string">&quot;https&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">struct</span> <span class="token class-name">curl_slist</span> <span class="token operator">*</span>headers <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
	<span class="token comment">//headers = curl_slist_append(headers, &quot;Content-Type: application/json&quot;);</span>

	string <span class="token function">strAuth</span><span class="token punctuation">(</span><span class="token function">W2A</span><span class="token punctuation">(</span>m_strAuth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	headers <span class="token operator">=</span> <span class="token function">curl_slist_append</span><span class="token punctuation">(</span>headers<span class="token punctuation">,</span> strAuth<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	headers <span class="token operator">=</span> <span class="token function">curl_slist_append</span><span class="token punctuation">(</span>headers<span class="token punctuation">,</span> <span class="token string">&quot;Content-Type: application/json; charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	headers <span class="token operator">=</span> <span class="token function">curl_slist_append</span><span class="token punctuation">(</span>headers<span class="token punctuation">,</span> <span class="token string">&quot;Accept-Encoding: gzip,deflate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置Accept-Encoding</span>
	<span class="token function">curl_easy_setopt</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">,</span> CURLOPT_HTTPHEADER<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
	string jsonout <span class="token operator">=</span> <span class="token function">GBKToUTF8</span><span class="token punctuation">(</span><span class="token function">W2A</span><span class="token punctuation">(</span>m_strData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//json数据需要转换</span>
	<span class="token function">curl_easy_setopt</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">,</span> CURLOPT_POSTFIELDS<span class="token punctuation">,</span> jsonout<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">curl_easy_setopt</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">,</span> CURLOPT_WRITEFUNCTION<span class="token punctuation">,</span> downloadCallback<span class="token punctuation">)</span><span class="token punctuation">;</span> 
	<span class="token function">curl_easy_setopt</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">,</span> CURLOPT_WRITEDATA<span class="token punctuation">,</span> <span class="token operator">&amp;</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
	res <span class="token operator">=</span> <span class="token function">curl_easy_perform</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span><span class="token punctuation">(</span>res <span class="token operator">==</span> CURLE_OK<span class="token punctuation">)</span>  
		m_strContent <span class="token operator">=</span> <span class="token function">UTF8ToUnicode</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>content<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token keyword">else</span>
	<span class="token punctuation">{</span>
		<span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;curl_easy_perform() failed: %s\\n&quot;</span><span class="token punctuation">,</span><span class="token function">curl_easy_strerror</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">curl_easy_cleanup</span><span class="token punctuation">(</span>m_curl<span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),c=[o];function e(u,l){return s(),a("div",null,c)}const k=n(p,[["render",e],["__file","libcurl post json乱码.html.vue"]]);export{k as default};
