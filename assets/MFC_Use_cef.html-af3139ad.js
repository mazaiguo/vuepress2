import{_ as p,r as o,o as c,c as l,a as n,b as s,d as e,e as t}from"./app-a242af93.js";const i={},u=n("h1",{id:"mfc使用cef",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mfc使用cef","aria-hidden":"true"},"#"),s(" MFC使用cef")],-1),r=n("h2",{id:"编译cef",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#编译cef","aria-hidden":"true"},"#"),s(" 编译CEF")],-1),d={href:"https://bitbucket.org/chromiumembedded/cef/wiki/BranchesAndBuilding",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"直接下载二进制文件",-1),v=n("th",null,[s("01/07/2020 - 79.1.3+ga5342ed+chromium-79.0.3945.88 / Chromium 79.0.3945.88"),n("strong",null,"STABLE")],-1),m={href:"https://bitbucket.org/chromiumembedded/cef/get/3945.tar.bz2",target:"_blank",rel:"noopener noreferrer"},b={href:"https://gsdview.appspot.com/chromium-browser-official/chromium-79.0.3945.88.tar.xz",target:"_blank",rel:"noopener noreferrer"},f={href:"https://cef-builds.spotifycdn.com/cef_binary_79.1.3%2Bga5342ed%2Bchromium-79.0.3945.88_windows64.tar.bz2",target:"_blank",rel:"noopener noreferrer"},w=n("td",null,null,-1),g=t('<h3 id="关于cmake中cmp0074变量设置以及-packagename-root" tabindex="-1"><a class="header-anchor" href="#关于cmake中cmp0074变量设置以及-packagename-root" aria-hidden="true">#</a> 关于cmake中CMP0074变量设置以及＜PackageName＞_ROOT</h3><h3 id="问题分析" tabindex="-1"><a class="header-anchor" href="#问题分析" aria-hidden="true">#</a> 问题分析</h3><p>根据警告提示信息，_ROOT变量被忽略了，如果不想忽略需要使用cmake_policy指令设置变量CMP0074。</p><h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h3><p>在CMakeLists.txt中第二行添加一条cmake_policy(SET CMP0074 NEW) 或者 cmake_policy(SET CMP0074 OLD)，前面所示的警告就消失了。在Windows中使用cmake的一些无法找到库文件的错误提示，比如常见 xxx not found 也是因为这个变量没有设置忽略了PackageName_ROOT导致的。</p>',5),h={href:"https://blog.csdn.net/m0_67316550/article/details/123626418",target:"_blank",rel:"noopener noreferrer"},_=t(`<p>编译libcef_dll_wrapper debug和release版本</p><h3 id="添加cefsimple中的文件" tabindex="-1"><a class="header-anchor" href="#添加cefsimple中的文件" aria-hidden="true">#</a> .添加cefsimple中的文件</h3><p>找到项目中对应文件，拷贝至MFC所在项目，如下图所示：</p><figure><img src="https://raw.githubusercontent.com/mazaiguo/blogimg/main/20231011-20231011110037.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>将resource里的文件全部拷贝到目录下</p><figure><img src="https://raw.githubusercontent.com/mazaiguo/blogimg/main/20231010-20231010161418.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>E:\\Gitee\\cef\\sample\\MFCApplication2\\MFCApplication2\\simple_handler.h</code></p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// Copyright (c) 2013 The Chromium Embedded Framework Authors. All rights</span>
<span class="token comment">// reserved. Use of this source code is governed by a BSD-style license that</span>
<span class="token comment">// can be found in the LICENSE file.</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">CEF_TESTS_CEFSIMPLE_SIMPLE_HANDLER_H_</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CEF_TESTS_CEFSIMPLE_SIMPLE_HANDLER_H_</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;include/cef_client.h&quot;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;list&gt;</span></span>

<span class="token keyword">class</span> <span class="token class-name">SimpleHandler</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">CefClient</span><span class="token punctuation">,</span>
                      <span class="token keyword">public</span> <span class="token class-name">CefDisplayHandler</span><span class="token punctuation">,</span>
                      <span class="token keyword">public</span> <span class="token class-name">CefLifeSpanHandler</span><span class="token punctuation">,</span>
                      <span class="token keyword">public</span> <span class="token class-name">CefLoadHandler</span></span> <span class="token punctuation">{</span>
 <span class="token keyword">public</span><span class="token operator">:</span>
  <span class="token keyword">explicit</span> <span class="token function">SimpleHandler</span><span class="token punctuation">(</span><span class="token keyword">bool</span> use_views<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">~</span><span class="token function">SimpleHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Provide access to the single global instance of this object.</span>
  <span class="token keyword">static</span> SimpleHandler<span class="token operator">*</span> <span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// CefClient methods:</span>
  <span class="token keyword">virtual</span> CefRefPtr<span class="token operator">&lt;</span>CefDisplayHandler<span class="token operator">&gt;</span> <span class="token function">GetDisplayHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> OVERRIDE <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">virtual</span> CefRefPtr<span class="token operator">&lt;</span>CefLifeSpanHandler<span class="token operator">&gt;</span> <span class="token function">GetLifeSpanHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> OVERRIDE <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">virtual</span> CefRefPtr<span class="token operator">&lt;</span>CefLoadHandler<span class="token operator">&gt;</span> <span class="token function">GetLoadHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> OVERRIDE <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

  <span class="token comment">// CefDisplayHandler methods:</span>
  <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">OnTitleChange</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">,</span>
                             <span class="token keyword">const</span> CefString<span class="token operator">&amp;</span> title<span class="token punctuation">)</span> OVERRIDE<span class="token punctuation">;</span>

  <span class="token comment">// CefLifeSpanHandler methods:</span>
  <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">OnAfterCreated</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">)</span> OVERRIDE<span class="token punctuation">;</span>
  <span class="token keyword">virtual</span> <span class="token keyword">bool</span> <span class="token function">DoClose</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">)</span> OVERRIDE<span class="token punctuation">;</span>
  <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">OnBeforeClose</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">)</span> OVERRIDE<span class="token punctuation">;</span>

  <span class="token comment">// CefLoadHandler methods:</span>
  <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">OnLoadError</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">,</span>
                           CefRefPtr<span class="token operator">&lt;</span>CefFrame<span class="token operator">&gt;</span> frame<span class="token punctuation">,</span>
                           ErrorCode errorCode<span class="token punctuation">,</span>
                           <span class="token keyword">const</span> CefString<span class="token operator">&amp;</span> errorText<span class="token punctuation">,</span>
                           <span class="token keyword">const</span> CefString<span class="token operator">&amp;</span> failedUrl<span class="token punctuation">)</span> OVERRIDE<span class="token punctuation">;</span>

  <span class="token comment">// Request that all existing browser windows close.</span>
  <span class="token keyword">void</span> <span class="token function">CloseAllBrowsers</span><span class="token punctuation">(</span><span class="token keyword">bool</span> force_close<span class="token punctuation">)</span><span class="token punctuation">;</span>
  CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> <span class="token function">GetBrowser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> m_Browser<span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">bool</span> <span class="token function">IsClosing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> is_closing_<span class="token punctuation">;</span> <span class="token punctuation">}</span>

 <span class="token keyword">private</span><span class="token operator">:</span>
  <span class="token comment">// Platform-specific implementation.</span>
  <span class="token keyword">void</span> <span class="token function">PlatformTitleChange</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">,</span>
                           <span class="token keyword">const</span> CefString<span class="token operator">&amp;</span> title<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// True if the application is using the Views framework.</span>
  <span class="token keyword">const</span> <span class="token keyword">bool</span> use_views_<span class="token punctuation">;</span>

  <span class="token comment">// List of existing browser windows. Only accessed on the CEF UI thread.</span>
  <span class="token keyword">typedef</span> std<span class="token double-colon punctuation">::</span>list<span class="token operator">&lt;</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;&gt;</span> BrowserList<span class="token punctuation">;</span>
  BrowserList browser_list_<span class="token punctuation">;</span>
  CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> m_Browser<span class="token punctuation">;</span>
  <span class="token keyword">int</span> m_BrowserId<span class="token punctuation">;</span>
  <span class="token keyword">int</span> m_BrowserCount<span class="token punctuation">;</span>
  <span class="token keyword">bool</span> is_closing_<span class="token punctuation">;</span>

  <span class="token comment">// Include the default reference counting implementation.</span>
  <span class="token function">IMPLEMENT_REFCOUNTING</span><span class="token punctuation">(</span>SimpleHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span>  <span class="token comment">// CEF_TESTS_CEFSIMPLE_SIMPLE_HANDLER_H_</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加一个<code>CefRefPtr&lt;CefBrowser&gt; GetBrowser() { return m_Browser; }</code>函数</p><p><code>E:\\Gitee\\cef\\sample\\MFCApplication2\\MFCApplication2\\simple_handler.cc</code></p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// Copyright (c) 2013 The Chromium Embedded Framework Authors. All rights</span>
<span class="token comment">// reserved. Use of this source code is governed by a BSD-style license that</span>
<span class="token comment">// can be found in the LICENSE file.</span>


<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sstream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;include/base/cef_bind.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;include/cef_app.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;include/cef_parser.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;include/views/cef_browser_view.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;include/views/cef_window.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;include/wrapper/cef_closure_task.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;include/wrapper/cef_helpers.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;simple_handler.h&quot;</span></span>

<span class="token keyword">namespace</span> <span class="token punctuation">{</span>

SimpleHandler<span class="token operator">*</span> g_instance <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>

<span class="token comment">// Returns a data: URI with the specified contents.</span>
std<span class="token double-colon punctuation">::</span>string <span class="token function">GetDataURI</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>string<span class="token operator">&amp;</span> data<span class="token punctuation">,</span> <span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>string<span class="token operator">&amp;</span> mime_type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&quot;data:&quot;</span> <span class="token operator">+</span> mime_type <span class="token operator">+</span> <span class="token string">&quot;;base64,&quot;</span> <span class="token operator">+</span>
         <span class="token function">CefURIEncode</span><span class="token punctuation">(</span><span class="token function">CefBase64Encode</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">}</span>  <span class="token comment">// namespace</span>

<span class="token class-name">SimpleHandler</span><span class="token double-colon punctuation">::</span><span class="token function">SimpleHandler</span><span class="token punctuation">(</span><span class="token keyword">bool</span> use_views<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">use_views_</span><span class="token punctuation">(</span>use_views<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">is_closing_</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">DCHECK</span><span class="token punctuation">(</span><span class="token operator">!</span>g_instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
  g_instance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">SimpleHandler</span><span class="token double-colon punctuation">::</span><span class="token operator">~</span><span class="token function">SimpleHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  g_instance <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// static</span>
SimpleHandler<span class="token operator">*</span> <span class="token class-name">SimpleHandler</span><span class="token double-colon punctuation">::</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> g_instance<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">SimpleHandler</span><span class="token double-colon punctuation">::</span><span class="token function">OnTitleChange</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">,</span>
                                  <span class="token keyword">const</span> CefString<span class="token operator">&amp;</span> title<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">CEF_REQUIRE_UI_THREAD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>use_views_<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Set the title of the window using the Views framework.</span>
    CefRefPtr<span class="token operator">&lt;</span>CefBrowserView<span class="token operator">&gt;</span> browser_view <span class="token operator">=</span>
        <span class="token class-name">CefBrowserView</span><span class="token double-colon punctuation">::</span><span class="token function">GetForBrowser</span><span class="token punctuation">(</span>browser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>browser_view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      CefRefPtr<span class="token operator">&lt;</span>CefWindow<span class="token operator">&gt;</span> window <span class="token operator">=</span> browser_view<span class="token operator">-&gt;</span><span class="token function">GetWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">)</span>
        window<span class="token operator">-&gt;</span><span class="token function">SetTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Set the title of the window using platform APIs.</span>
    <span class="token function">PlatformTitleChange</span><span class="token punctuation">(</span>browser<span class="token punctuation">,</span> title<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">SimpleHandler</span><span class="token double-colon punctuation">::</span><span class="token function">OnAfterCreated</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">CEF_REQUIRE_UI_THREAD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Add to the list of existing browsers.</span>
  browser_list_<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>browser<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>m_Browser<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  <span class="token comment">// Keep a reference to the main browser.</span>
	  m_Browser <span class="token operator">=</span> browser<span class="token punctuation">;</span>
	  m_BrowserId <span class="token operator">=</span> browser<span class="token operator">-&gt;</span><span class="token function">GetIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Keep track of how many browsers currently exist.</span>
  m_BrowserCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">bool</span> <span class="token class-name">SimpleHandler</span><span class="token double-colon punctuation">::</span><span class="token function">DoClose</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">CEF_REQUIRE_UI_THREAD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Closing the main window requires special handling. See the DoClose()</span>
  <span class="token comment">// documentation in the CEF header for a detailed destription of this</span>
  <span class="token comment">// process.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>browser_list_<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Set a flag to indicate that the window close should be allowed.</span>
    is_closing_ <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Allow the close. For windowed browsers this will result in the OS close</span>
  <span class="token comment">// event being sent.</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">SimpleHandler</span><span class="token double-colon punctuation">::</span><span class="token function">OnBeforeClose</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">CEF_REQUIRE_UI_THREAD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Remove from the list of existing browsers.</span>
  BrowserList<span class="token double-colon punctuation">::</span>iterator bit <span class="token operator">=</span> browser_list_<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> bit <span class="token operator">!=</span> browser_list_<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>bit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>bit<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">IsSame</span><span class="token punctuation">(</span>browser<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      browser_list_<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>browser_list_<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// All browser windows have closed. Quit the application message loop.</span>
    <span class="token function">CefQuitMessageLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">SimpleHandler</span><span class="token double-colon punctuation">::</span><span class="token function">OnLoadError</span><span class="token punctuation">(</span>CefRefPtr<span class="token operator">&lt;</span>CefBrowser<span class="token operator">&gt;</span> browser<span class="token punctuation">,</span>
                                CefRefPtr<span class="token operator">&lt;</span>CefFrame<span class="token operator">&gt;</span> frame<span class="token punctuation">,</span>
                                ErrorCode errorCode<span class="token punctuation">,</span>
                                <span class="token keyword">const</span> CefString<span class="token operator">&amp;</span> errorText<span class="token punctuation">,</span>
                                <span class="token keyword">const</span> CefString<span class="token operator">&amp;</span> failedUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">CEF_REQUIRE_UI_THREAD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Don&#39;t display an error for downloaded files.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>errorCode <span class="token operator">==</span> ERR_ABORTED<span class="token punctuation">)</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>

  <span class="token comment">// Display a load error message using a data: URI.</span>
  std<span class="token double-colon punctuation">::</span>stringstream ss<span class="token punctuation">;</span>
  ss <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;&lt;html&gt;&lt;body bgcolor=\\&quot;white\\&quot;&gt;&quot;</span>
        <span class="token string">&quot;&lt;h2&gt;Failed to load URL &quot;</span>
     <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>failedUrl<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; with error &quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span><span class="token function">string</span><span class="token punctuation">(</span>errorText<span class="token punctuation">)</span>
     <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; (&quot;</span> <span class="token operator">&lt;&lt;</span> errorCode <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;).&lt;/h2&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span><span class="token punctuation">;</span>

  frame<span class="token operator">-&gt;</span><span class="token function">LoadURL</span><span class="token punctuation">(</span><span class="token function">GetDataURI</span><span class="token punctuation">(</span>ss<span class="token punctuation">.</span><span class="token function">str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">SimpleHandler</span><span class="token double-colon punctuation">::</span><span class="token function">CloseAllBrowsers</span><span class="token punctuation">(</span><span class="token keyword">bool</span> force_close<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">CefCurrentlyOn</span><span class="token punctuation">(</span>TID_UI<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Execute on the UI thread.</span>
    <span class="token function">CefPostTask</span><span class="token punctuation">(</span>TID_UI<span class="token punctuation">,</span> base<span class="token double-colon punctuation">::</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>SimpleHandler<span class="token double-colon punctuation">::</span>CloseAllBrowsers<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
                                   force_close<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>browser_list_<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>

  BrowserList<span class="token double-colon punctuation">::</span>const_iterator it <span class="token operator">=</span> browser_list_<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> it <span class="token operator">!=</span> browser_list_<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>it<span class="token punctuation">)</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">CloseBrowser</span><span class="token punctuation">(</span>force_close<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>增加一个<code>cef.manifest</code>文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>assembly</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>urn:schemas-microsoft-com:asm.v1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">manifestVersion</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>compatibility</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>urn:schemas-microsoft-com:compatibility.v1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span><span class="token punctuation">&gt;</span></span> 
      <span class="token comment">&lt;!--The ID below indicates application support for Windows 8.1 --&gt;</span>  
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>supportedOS</span> <span class="token attr-name">Id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{1f676c76-80e1-4239-95bb-83d0f6d0da78}<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>  
      <span class="token comment">&lt;!-- 10.0 --&gt;</span>  
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>supportedOS</span> <span class="token attr-name">Id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span> 
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">&gt;</span></span> 
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>compatibility</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>assembly</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/mazaiguo/blogimg/main/20231010-20231010161811.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,14);function y(C,E){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,r,n("p",null,[s("参考资料"),n("a",d,[s("cef / BranchesAndBuilding"),e(a)])]),k,n("table",null,[n("thead",null,[n("tr",null,[v,n("th",null,[n("a",m,[s("CEF source"),e(a)]),s(" | "),n("a",b,[s("Chromium source"),e(a)])])])]),n("tbody",null,[n("tr",null,[n("td",null,[s("Standard Distribution"),n("a",f,[s("cef_binary_79.1.3+ga5342ed+chromium-79.0.3945.88_windows64.tar.bz2"),e(a)])]),w])])]),g,n("p",null,[n("a",h,[s("Vs2017 cef"),e(a)])]),_])}const S=p(i,[["render",y],["__file","MFC_Use_cef.html.vue"]]);export{S as default};
