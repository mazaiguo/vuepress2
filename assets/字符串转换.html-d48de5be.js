import{_ as n,o as s,c as a,e as t}from"./app-a242af93.js";const p={},e=t(`<h1 id="字符串转换" tabindex="-1"><a class="header-anchor" href="#字符串转换" aria-hidden="true">#</a> 字符串转换</h1><h2 id="cstring转const-char" tabindex="-1"><a class="header-anchor" href="#cstring转const-char" aria-hidden="true">#</a> CString转const char*</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>CString <span class="token function">s</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token function">CW2A</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/////////////////////////////////////////</span>
CString <span class="token function">s</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">sprintf</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token string">&quot;%S&quot;</span><span class="token punctuation">,</span>s<span class="token punctuation">.</span><span class="token function">GetBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//注意%S是大写</span>
s<span class="token punctuation">.</span><span class="token function">ReleaseBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/////////////////////////////////////////</span>
<span class="token comment">//需要#include &lt;atlconv.h&gt;</span>
CString <span class="token function">s</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
USES_CONVERSION<span class="token punctuation">;</span>  <span class="token comment">//需要这一步才能使用W2A         </span>
<span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> buf<span class="token operator">=</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token function">W2A</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cstring转string" tabindex="-1"><a class="header-anchor" href="#cstring转string" aria-hidden="true">#</a> CString转string</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CString m_strData;
string str = W2A(m_strData);

CString path;
string str2 = path.GetBuffer();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="string转cstring" tabindex="-1"><a class="header-anchor" href="#string转cstring" aria-hidden="true">#</a> string转CString</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>string RetStr<span class="token punctuation">;</span>
CString result<span class="token punctuation">;</span>
result <span class="token operator">=</span> RetStr<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cstring转换为char" tabindex="-1"><a class="header-anchor" href="#cstring转换为char" aria-hidden="true">#</a> CString转换为char *</h3><ul><li>使用API：WideCharToMultiByte进行转换</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>CString str <span class="token operator">=</span> <span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">&quot;D://校内项目//QQ.bmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//注意：以下n和len的值大小不同,n是按字符计算的，len是按字节计算的</span>
<span class="token keyword">int</span> n <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// n = 14, len = 18</span>

<span class="token comment">//获取宽字节字符的大小，大小是按字节计算的</span>
<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>str<span class="token punctuation">,</span>str<span class="token punctuation">.</span><span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//为多字节字符数组申请空间，数组大小为按字节计算的宽字节字节大小</span>
<span class="token keyword">char</span> <span class="token operator">*</span> pFileName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>len<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//以字节为单位</span>

<span class="token comment">//宽字节编码转换成多字节编码</span>
           <span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>str<span class="token punctuation">,</span>str<span class="token punctuation">.</span><span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pFileName<span class="token punctuation">,</span>len<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

pFileName<span class="token punctuation">[</span>len<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;/0&#39;</span><span class="token punctuation">;</span>   <span class="token comment">//多字节字符以&#39;/0&#39;结束</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用函数：T2A、W2A</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CString str = _T(&quot;D://校内项目//QQ.bmp&quot;);

//声明标识符
USES_CONVERSION;

//调用函数，T2A和W2A均支持ATL和MFC中的字符转换
char * pFileName = T2A(str);   
//char * pFileName = W2A(str); //也可实现转换

注意：有时候可能还需要添加引用#include   &lt;afxpriv.h&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="char-转换为cstring" tabindex="-1"><a class="header-anchor" href="#char-转换为cstring" aria-hidden="true">#</a> char *转换为CString</h3><ul><li>使用API：MultiByteToWideChar进行转换</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">char</span> <span class="token operator">*</span> pFileName <span class="token operator">=</span> <span class="token string">&quot;D://校内项目//QQ.bmp&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//计算char *数组大小，以字节为单位，一个汉字占两个字节</span>
<span class="token keyword">int</span> charLen <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>pFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//计算多字节字符的大小，按字符计算。</span>
<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>pFileName<span class="token punctuation">,</span>charLen<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//为宽字节字符数组申请空间，数组大小为按字节计算的多字节字符大小</span>
TCHAR <span class="token operator">*</span>buf <span class="token operator">=</span> <span class="token keyword">new</span> TCHAR<span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//多字节编码转换成宽字节编码</span>
<span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>pFileName<span class="token punctuation">,</span>charLen<span class="token punctuation">,</span>buf<span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
buf<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;/0&#39;</span><span class="token punctuation">;</span> <span class="token comment">//添加字符串结尾，注意不是len+1</span>

<span class="token comment">//将TCHAR数组转换为CString</span>
CString pWideChar<span class="token punctuation">;</span>
pWideChar<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//删除缓冲区</span>
<span class="token keyword">delete</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>buf<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用函数：A2T、A2W</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">char</span> <span class="token operator">*</span> pFileName <span class="token operator">=</span> <span class="token string">&quot;D://校内项目//QQ.bmp&quot;</span><span class="token punctuation">;</span>
USES_CONVERSION<span class="token punctuation">;</span>
CString s <span class="token operator">=</span> <span class="token function">A2T</span><span class="token punctuation">(</span>pFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//CString s = A2W(pFileName);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="将gbk转换成utf8" tabindex="-1"><a class="header-anchor" href="#将gbk转换成utf8" aria-hidden="true">#</a> 将GBK转换成UTF8</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>string <span class="token function">GBKToUTF8</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>string<span class="token operator">&amp;</span> strGBK<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
 string strOutUTF8 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
 WCHAR <span class="token operator">*</span> str1<span class="token punctuation">;</span>
 <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> strGBK<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 str1 <span class="token operator">=</span> <span class="token keyword">new</span> WCHAR<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> strGBK<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> str1<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
 n <span class="token operator">=</span> <span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> str1<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">char</span> <span class="token operator">*</span> str2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> str1<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> str2<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 strOutUTF8 <span class="token operator">=</span> str2<span class="token punctuation">;</span>
 <span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span>str1<span class="token punctuation">;</span>
 str1 <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
 <span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span>str2<span class="token punctuation">;</span>
 str2 <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
 <span class="token keyword">return</span> strOutUTF8<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="将utf8转换成gbk" tabindex="-1"><a class="header-anchor" href="#将utf8转换成gbk" aria-hidden="true">#</a> 将UTF8转换成GBK</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>string <span class="token function">UTF8ToGBK</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>string<span class="token operator">&amp;</span> strUTF8<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
 <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> strUTF8<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">unsigned</span> <span class="token keyword">short</span> <span class="token operator">*</span> wszGBK <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">unsigned</span> <span class="token keyword">short</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token function">memset</span><span class="token punctuation">(</span>wszGBK<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>LPCTSTR<span class="token punctuation">)</span>strUTF8<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> wszGBK<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

 len <span class="token operator">=</span> <span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wszGBK<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">char</span> <span class="token operator">*</span>szGBK <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token function">memset</span><span class="token punctuation">(</span>szGBK<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> wszGBK<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> szGBK<span class="token punctuation">,</span> len<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment">//strUTF8 = szGBK;</span>
 std<span class="token double-colon punctuation">::</span>string <span class="token function">strTemp</span><span class="token punctuation">(</span>szGBK<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span>szGBK<span class="token punctuation">;</span>
 <span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span>wszGBK<span class="token punctuation">;</span>
 <span class="token keyword">return</span> strTemp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p><strong>待验证</strong></p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">ConvertGBKToUtf8</span><span class="token punctuation">(</span>CString<span class="token operator">&amp;</span> strGBK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">CW2A</span><span class="token punctuation">(</span>strGBK<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	WCHAR <span class="token operator">*</span> wszUtf8 <span class="token operator">=</span> <span class="token keyword">new</span> WCHAR<span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token function">memset</span><span class="token punctuation">(</span>wszUtf8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">CW2A</span><span class="token punctuation">(</span>strGBK<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> wszUtf8<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

	len <span class="token operator">=</span> <span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wszUtf8<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">char</span> <span class="token operator">*</span>szUtf8 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token function">memset</span><span class="token punctuation">(</span>szUtf8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wszUtf8<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> szUtf8<span class="token punctuation">,</span> len<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	strGBK <span class="token operator">=</span> szUtf8<span class="token punctuation">;</span>
	<span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span> szUtf8<span class="token punctuation">;</span>
	<span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span> wszUtf8<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">ConvertUtf8ToGBK</span><span class="token punctuation">(</span>CString<span class="token operator">&amp;</span> strUtf8<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">CW2A</span><span class="token punctuation">(</span>strUtf8<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	WCHAR <span class="token operator">*</span> wszGBK <span class="token operator">=</span> <span class="token keyword">new</span> WCHAR<span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token function">memset</span><span class="token punctuation">(</span>wszGBK<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">MultiByteToWideChar</span><span class="token punctuation">(</span>CP_UTF8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">CW2A</span><span class="token punctuation">(</span>strUtf8<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> wszGBK<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

	len <span class="token operator">=</span> <span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wszGBK<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">char</span> <span class="token operator">*</span>szGBK <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token function">memset</span><span class="token punctuation">(</span>szGBK<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">WideCharToMultiByte</span><span class="token punctuation">(</span>CP_ACP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wszGBK<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> szGBK<span class="token punctuation">,</span> len<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	strUtf8 <span class="token operator">=</span> szGBK<span class="token punctuation">;</span>
	<span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span> szGBK<span class="token punctuation">;</span>
	<span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span> wszGBK<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,25),o=[e];function c(u,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","字符串转换.html.vue"]]);export{k as default};
