import{_ as n,r as t,o as d,c as r,a as e,b as a,d as c,e as i}from"./app-a242af93.js";const l="/vuepress2/assets/Snipaste_2023-05-06_14-06-33-4f5fe78e.png",o="/vuepress2/assets/81213b71af5d4019b9b0abad1d481439-703ac667.png",h={},u=i(`<h1 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h1><h2 id="openssl-ssl-read-connection-was-reset-errno-10054" tabindex="-1"><a class="header-anchor" href="#openssl-ssl-read-connection-was-reset-errno-10054" aria-hidden="true">#</a> OpenSSL SSL_read: Connection was reset, errno 10054</h2><h3 id="解决办法" tabindex="-1"><a class="header-anchor" href="#解决办法" aria-hidden="true">#</a> 解决办法</h3><ul><li><p>打开Git Bash，CD到指定目录</p></li><li><p>如果说是SSL证书问题，那么，按如下代码解除SSL验证</p></li></ul><div class="language-cmake line-numbers-mode" data-ext="cmake"><pre class="language-cmake"><code>git config --global http.sslVerify <span class="token string">&quot;false&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),p={href:"https://github.com/chromiumembedded/cef.git",target:"_blank",rel:"noopener noreferrer"},g=i(`<li><p>如果上述指令无法解决你的问题，可以执行如下指令：</p><div class="language-cmake line-numbers-mode" data-ext="cmake"><pre class="language-cmake"><code>git config --global https.sslVerify <span class="token string">&quot;false&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>再重新执行克隆命令，即可解决了我的问题，如下图所示：</p><figure><img src="`+l+'" alt="avatar" tabindex="0" loading="lazy"><figcaption>avatar</figcaption></figure></li>',2),b=i(`<h2 id="问题-1" tabindex="-1"><a class="header-anchor" href="#问题-1" aria-hidden="true">#</a> 问题</h2><h3 id="updates-were-rejected-because-a-pushed-branch-tip-is-behind-its-remote" tabindex="-1"><a class="header-anchor" href="#updates-were-rejected-because-a-pushed-branch-tip-is-behind-its-remote" aria-hidden="true">#</a> Updates were rejected because a pushed branch tip is behind its remote</h3><h3 id="解决办法-1" tabindex="-1"><a class="header-anchor" href="#解决办法-1" aria-hidden="true">#</a> 解决办法</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git pull #先执行pull
git push origin dev  #推送到远端dev分支
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><p><code>git stash</code>：备份当前工作区内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前工作区内容保存到Git栈中<br><code>git pull</code>：拉取服务器上当前分支代码<br><code>git stash pop</code>：从Git栈中读取最近一次保存的内容，恢复工作区相关内容。同时，用户可能进行多次stash操作，需要保证后stash的最先被取到，所以用栈（先进后出）来管理；pop取栈顶的内容并恢复<br><code>git stash list</code>：显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。<br><code>git stash clear</code>：清空Git栈</p><hr><h2 id="问题-2" tabindex="-1"><a class="header-anchor" href="#问题-2" aria-hidden="true">#</a> 问题</h2><h3 id="schannel-failed-to-receive-handshake-ssl-tls-connection-failed" tabindex="-1"><a class="header-anchor" href="#schannel-failed-to-receive-handshake-ssl-tls-connection-failed" aria-hidden="true">#</a> schannel: failed to receive handshake, SSL/TLS connection failed</h3><figure><img src="`+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="解决办法-2" tabindex="-1"><a class="header-anchor" href="#解决办法-2" aria-hidden="true">#</a> 解决办法</h3><h4 id="方法一" tabindex="-1"><a class="header-anchor" href="#方法一" aria-hidden="true">#</a> 方法一</h4><p>在C盘个人用户中找到.gitconfig文件，设置或修改以下内容，然后解决</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[http]
    sslbackend = openssl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法二" tabindex="-1"><a class="header-anchor" href="#方法二" aria-hidden="true">#</a> 方法二</h4><p>打开Git Base Here，输入下面的命令，回车即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git config --global http.sslBackend &quot;openssl&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17);function m(f,v){const s=t("ExternalLinkIcon");return d(),r("div",null,[u,e("ul",null,[e("li",null,[e("p",null,[a("重新执行 git clone --recursive "),e("a",p,[a("https://github.com/chromiumembedded/cef.git"),c(s)]),a(" 命令，但依旧无法下载。")])]),g]),b])}const _=n(h,[["render",m],["__file","Git问题.html.vue"]]);export{_ as default};
